
# Chi Square test program by Atul kumar
# Chi square test for n observation in a random sample distributed in  k class with probability  pi for each ith class
column = [0.995,0.99,0.975, 0.95,0.9,0.1,0.05,0.025,0.01]
chi_sq_ditri_table = [[0.0, 0.0, 0.0, 0.0, 0.02, 2.71, 3.84, 5.02, 6.63],
[ 0.01, 0.02, 0.05, 0.1, 0.21, 4.61, 5.99, 7.38, 9.21],
[ 0.07, 0.11, 0.22, 0.35, 0.58, 6.25, 7.81, 9.35, 11.34],
[ 0.21, 0.3, 0.48, 0.71, 1.06, 7.78, 9.49, 11.14, 13.28],
[ 0.41, 0.55, 0.83, 1.15, 1.61, 9.24, 11.07, 12.83, 15.09],
[ 0.68, 0.87, 1.24, 1.64, 2.2, 10.64, 12.59, 14.45, 16.81],
[ 0.99, 1.24, 1.69, 2.17, 2.83, 12.02, 14.07, 16.01, 18.48],
[ 1.34, 1.65, 2.18, 2.73, 3.49, 13.36, 15.51, 17.53, 20.09],
[ 1.73, 2.09, 2.7, 3.33, 4.17, 14.68, 16.92, 19.02, 21.67],
[ 2.16, 2.56, 3.25, 3.94, 4.87, 15.99, 18.31, 20.48, 23.21],
[ 2.6, 3.05, 3.82, 4.57, 5.58, 17.28, 19.68, 21.92, 24.72],
[ 3.07, 3.57, 4.4, 5.23, 6.3, 18.55, 21.03, 23.34, 26.22],
[ 3.57, 4.11, 5.01, 5.89, 7.04, 19.81, 22.36, 24.74, 27.69],
[ 4.07, 4.66, 5.63, 6.57, 7.79, 21.06, 23.68, 26.12, 29.14],
[ 4.6, 5.23, 6.26, 7.26, 8.55, 22.31, 25.0, 27.49, 30.58],
[ 5.14, 5.81, 6.91, 7.96, 9.31, 23.54, 26.3, 28.85, 32.0],
[ 5.7, 6.41, 7.56, 8.67, 10.09, 24.77, 27.59, 30.19, 33.41],
[ 6.26, 7.01, 8.23, 9.39, 10.86, 25.99, 28.87, 31.53, 34.81],
[ 6.84, 7.63, 8.91, 10.12, 11.65, 27.2, 30.14, 32.85, 36.19],
[ 7.43, 8.26, 9.59, 10.85, 12.44, 28.41, 31.41, 34.17, 37.57],
[ 8.64, 9.54, 10.98, 12.34, 14.04, 30.81, 33.92, 36.78, 40.29],
[ 9.89, 10.86, 12.4, 13.85, 15.66, 33.2, 36.42, 39.36, 42.98],
[ 11.16, 12.2, 13.84, 15.38, 17.29, 35.56, 38.89, 41.92, 45.64],
[ 12.46, 13.56, 15.31, 16.93, 18.94, 37.92, 41.34, 44.46, 48.28],
[ 13.79, 14.95, 16.79, 18.49, 20.6, 40.26, 43.77, 46.98, 50.89],
[ 15.13, 16.36, 18.29, 20.07, 22.27, 42.58, 46.19, 49.48, 53.49],
[ 16.5, 17.79, 19.81, 21.66, 23.95, 44.9, 48.6, 51.97, 56.06],
[ 19.29, 20.69, 22.88, 24.88, 27.34, 49.51, 53.38, 56.9, 61.16],
[ 22.14, 23.65, 26.0, 28.14, 30.77, 54.09, 58.12, 61.78, 66.21],
[ 25.04, 26.66, 29.16, 31.44, 34.22, 58.64, 62.83, 66.62, 71.2],
[ 27.99, 29.71, 32.36, 34.76, 37.69, 63.17, 67.5, 71.42, 76.15],
[ 31.73, 33.57, 36.4, 38.96, 42.06, 68.8, 73.31, 77.38, 82.29],
[ 35.53, 37.48, 40.48, 43.19, 46.46, 74.4, 79.08, 83.3, 88.38],
[ 39.38, 41.44, 44.6, 47.45, 50.88, 79.97, 84.82, 89.18, 94.42],
[ 43.28, 45.44, 48.76, 51.74, 55.33, 85.53, 90.53, 95.02, 100.43],
[ 47.21, 49.48, 52.94, 56.05, 59.79, 91.06, 96.22, 100.84, 106.39],
[ 51.17, 53.54, 57.15, 60.39, 64.28, 96.58, 101.88, 106.63, 112.33],
[ 55.17, 57.63, 61.39, 64.75, 68.78, 102.08, 107.52, 112.39, 118.24],
[ 59.2, 61.75, 65.65, 69.13, 73.29, 107.57, 113.15, 118.14, 124.12],
[ 63.25, 65.9, 69.92, 73.52, 77.82, 113.04, 118.75, 123.86, 129.97],
[ 67.33, 70.06, 74.22, 77.93, 82.36, 118.5, 124.34, 129.56, 135.81]]
class ChiSquareTest:
    def __init__(self, x, m):
        self.datasample = x
        self.expectedvalue  = m
        self.dof = len(x) - 1
        self.upper_bound = 0
        self.lower_bound = 0

    def calculateChiSquareStat(self):
        chistat = map(lambda a, b: ((a-b)*(a-b))/b, self.datasample, self.expectedvalue)
        self.chistatval = sum(chistat)
        return self.chistatval

    def caldof(self):
        self.dof = len(self.datasample) - 1
        return self.dof

    def calPvalue(self):
        for i in range(len(chi_sq_ditri_table[self.dof-1])):
            if chi_sq_ditri_table[self.dof-1][i] > self.chistatval:
                self.upper_bound = column[i]
                self.lower_bound = column[i-1]
                break
        return (self.upper_bound + self.lower_bound)/2




print("total no of observation and no of classes")
n, k = map(int, input().split())
# k space separated  value for each class
print("enter k space separated values for sample frequency in each class")
x = list(map(int, input().split()))

# k space separated value for probability of each class, in this case evenly distributed sample pi = 1/k
p = []
for _ in range(k):
    p.append(1.0/k)

m = [round(float(sum(x)*p[i]), 4) for i in range(len(p))]

obj = ChiSquareTest(x, m)
chi_score = obj.calculateChiSquareStat()
pVal = obj.calPvalue()
print("Chi_score = ", chi_score)
print("P-Value = " + str(pVal))
print("P-Value in % = " + str(pVal*100)+' %')


